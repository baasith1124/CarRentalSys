@model CarRentalSystem.Web.ViewModels.Admin.CarFormViewModel

@{
    ViewData["Title"] = Model.PageTitle;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="car-form-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="page-title">
                <i class="@(Model.IsEditMode ? "bi bi-pencil-square" : "bi bi-plus-circle")"></i>
                @Model.PageTitle
            </h2>
            <p class="text-muted">@(Model.IsEditMode ? "Update the details for this car." : "Fill in the details to add a new car to the system.")</p>
        </div>
        <a asp-controller="CarManagement" asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Car Management
        </a>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-controller="CarManagement" asp-action="@(Model.IsEditMode ? "Edit" : "Create")" 
                  asp-route-carId="@(Model.IsEditMode ? Model.CarId : null)" 
                  method="post" enctype="multipart/form-data" id="carForm">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>

                @if (Model.IsEditMode)
                {
                    <input type="hidden" asp-for="CarId" />
                    <input type="hidden" asp-for="CurrentImagePath" />
                }

                <div class="row">
                    <!-- Car Basic Information -->
                    <div class="col-md-6">
                        <h5 class="section-title">Basic Information</h5>
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Car Name *</label>
                            <input asp-for="Name" class="form-control" placeholder="e.g., Toyota Camry" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Model" class="form-label">Model *</label>
                            <input asp-for="Model" class="form-control" placeholder="e.g., LE, XLE" />
                            <span asp-validation-for="Model" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Year" class="form-label">Year *</label>
                            <input asp-for="Year" class="form-control" type="number" min="1900" max="@DateTime.Now.Year" placeholder="e.g., 2023" />
                            <span asp-validation-for="Year" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Transmission" class="form-label">Transmission *</label>
                            <select asp-for="Transmission" class="form-select">
                                <option value="">Select Transmission</option>
                                <option value="Automatic">Automatic</option>
                                <option value="Manual">Manual</option>
                            </select>
                            <span asp-validation-for="Transmission" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="FuelType" class="form-label">Fuel Type *</label>
                            <select asp-for="FuelType" class="form-select">
                                <option value="">Select Fuel Type</option>
                                <option value="Petrol">Petrol</option>
                                <option value="Diesel">Diesel</option>
                                <option value="Electric">Electric</option>
                                <option value="Hybrid">Hybrid</option>
                            </select>
                            <span asp-validation-for="FuelType" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Car Details -->
                    <div class="col-md-6">
                        <h5 class="section-title">Car Details</h5>
                        
                        <div class="mb-3">
                            <label asp-for="RatePerDay" class="form-label">Rate Per Day *</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="RatePerDay" class="form-control" type="number" step="0.01" min="1" placeholder="0.00" />
                            </div>
                            <span asp-validation-for="RatePerDay" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="OwnerId" class="form-label">Owner *</label>
                            <select asp-for="OwnerId" class="form-select" asp-items="@(new SelectList(Model.AvailableOwners, "Id", "Name", Model.OwnerId))">
                                <option value="">Select Owner</option>
                            </select>
                            <span asp-validation-for="OwnerId" class="text-danger"></span>
                        </div>

                        @if (Model.IsEditMode)
                        {
                            <div class="mb-3">
                                <label asp-for="ApprovalStatus" class="form-label">Approval Status</label>
                                <select asp-for="ApprovalStatus" class="form-select" asp-items="@(new SelectList(Model.AvailableStatuses, "Value", "Text", Model.ApprovalStatus))">
                                    <option value="">Select Status</option>
                                </select>
                                <span asp-validation-for="ApprovalStatus" class="text-danger"></span>
                            </div>
                        }

                        <div class="mb-3">
                            <label asp-for="AvailableFrom" class="form-label">Available From *</label>
                            <input asp-for="AvailableFrom" class="form-control" type="date" id="AvailableFrom" />
                            <span asp-validation-for="AvailableFrom" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="AvailableTo" class="form-label">Available To *</label>
                            <input asp-for="AvailableTo" class="form-control" type="date" id="AvailableTo" />
                            <span asp-validation-for="AvailableTo" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <h5 class="section-title">Additional Information</h5>
                        
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the car's features and condition..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Features" class="form-label">Features</label>
                            <textarea asp-for="Features" class="form-control" rows="2" placeholder="e.g., Air Conditioning, GPS, Bluetooth, etc."></textarea>
                            <span asp-validation-for="Features" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ImageFile" class="form-label">Car Image</label>
                            <input asp-for="ImageFile" type="file" class="form-control" accept="image/*" id="imageUpload" />
                            <span asp-validation-for="ImageFile" class="text-danger"></span>
                            
                            <div class="mt-2" id="imagePreviewContainer">
                                @if (Model.IsEditMode && !string.IsNullOrEmpty(Model.CurrentImagePath))
                                {
                                    <p>Current Image:</p>
                                    <img id="imagePreview" src="@Model.CurrentImagePath" alt="Current Image" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                                }
                                else
                                {
                                    <img id="imagePreview" src="#" alt="Image Preview" class="img-thumbnail" style="max-width: 200px; max-height: 200px; display: none;" />
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2 mt-4">
                    <a asp-controller="CarManagement" asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="@Model.SubmitButtonIcon"></i> @Model.SubmitButtonText
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('carForm');
            const availableFromInput = document.getElementById('AvailableFrom');
            const availableToInput = document.getElementById('AvailableTo');
            const imageUpload = document.getElementById('imageUpload');
            const imagePreview = document.getElementById('imagePreview');
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            
            console.log('Car form loaded');
            console.log('Form found:', form);
            console.log('Is edit mode:', @Model.IsEditMode.ToString().ToLower());

            // Set minimum date to today
            const today = new Date().toISOString().split('T')[0];
            if (availableFromInput) {
                availableFromInput.min = today;
            }
            if (availableToInput) {
                availableToInput.min = today;
            }

            // Auto-update Available To when Available From changes
            if (availableFromInput && availableToInput) {
                availableFromInput.addEventListener('change', function() {
                    const fromDate = new Date(this.value);
                    if (fromDate && availableToInput.value) {
                        const toDate = new Date(availableToInput.value);
                        if (toDate <= fromDate) {
                            // Set Available To to one day after Available From
                            const nextDay = new Date(fromDate);
                            nextDay.setDate(nextDay.getDate() + 1);
                            availableToInput.value = nextDay.toISOString().split('T')[0];
                        }
                    } else if (fromDate && !availableToInput.value) {
                        // Set default Available To to one month later
                        const oneMonthLater = new Date(fromDate);
                        oneMonthLater.setMonth(oneMonthLater.getMonth() + 1);
                        availableToInput.value = oneMonthLater.toISOString().split('T')[0];
                    }
                });
            }

            // Form validation
            if (form) {
                form.addEventListener('submit', function(e) {
                    console.log('Form submit event triggered');
                    const availableFrom = new Date(availableFromInput.value);
                    const availableTo = new Date(availableToInput.value);
                    
                    console.log('Available From:', availableFrom);
                    console.log('Available To:', availableTo);
                    
                    if (availableTo <= availableFrom) {
                        e.preventDefault();
                        alert('Available To date must be after Available From date.');
                        return false;
                    }
                    
                    console.log('Form submission allowed - proceeding to server');
                    return true;
                });
            }

            // Image preview
            if (imageUpload) {
                imageUpload.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            imagePreview.src = e.target.result;
                            imagePreview.style.display = 'block';
                            imagePreviewContainer.style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                    } else {
                        // If no new file, show current image if available, otherwise hide preview
                        if (@Model.IsEditMode.ToString().ToLower() && '@Model.CurrentImagePath') {
                            imagePreview.src = '@Model.CurrentImagePath';
                            imagePreview.style.display = 'block';
                            imagePreviewContainer.style.display = 'block';
                        } else {
                            imagePreview.src = '#';
                            imagePreview.style.display = 'none';
                            imagePreviewContainer.style.display = 'none';
                        }
                    }
                });
            }
        });
    </script>
}

<style>
    .car-form-container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .section-title {
        color: #2c3e50;
        border-bottom: 2px solid #3498db;
        padding-bottom: 8px;
        margin-bottom: 20px;
        font-weight: 600;
    }

    .page-title {
        color: #2c3e50;
        font-weight: 700;
    }

    .form-label {
        font-weight: 600;
        color: #34495e;
    }

    .form-control, .form-select {
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        padding: 12px 16px;
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        border-color: #3498db;
        box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
    }

    .btn {
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
        border: none;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #2980b9, #1f4e79);
        transform: translateY(-2px);
    }

    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .img-thumbnail {
        border-radius: 8px;
        border: 2px solid #ecf0f1;
    }
</style>

