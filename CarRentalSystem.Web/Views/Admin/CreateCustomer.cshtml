@model CarRentalSystem.Web.ViewModels.Admin.CreateCustomerViewModel

@{
    ViewData["Title"] = "Create Customer";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-dashboard-3d page-transition">
    <!-- Enhanced 3D Header -->
    <div class="dashboard-header-3d">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="dashboard-title-3d text-gradient">
                    <div class="title-icon-3d">
                        <i class="bi bi-person-plus"></i>
                        <div class="icon-glow-3d"></div>
                    </div>
                    Create New Customer
                </h1>
                <p class="dashboard-subtitle-3d">Add a new customer to the system with enhanced validation</p>
            </div>
            <div class="dashboard-actions-3d">
                <a href="@Url.Action("Customers")" class="btn-3d-interactive btn-secondary-3d hover-lift">
                    <i class="bi bi-arrow-left"></i>
                    <span>Back to Customers</span>
                </a>
            </div>
        </div>
    </div>

    <!-- Enhanced Create Customer Form -->
    <div class="row g-4">
        <div class="col-12">
            <div class="card-3d-interactive hover-lift">
                <div class="card-header-3d">
                    <h5 class="card-title-3d mb-0 text-gradient">
                        <div class="title-icon-3d">
                            <i class="bi bi-person-plus"></i>
                            <div class="icon-glow-3d"></div>
                        </div>
                        Customer Information
                    </h5>
                </div>
                <div class="card-body-3d">
                    <form asp-action="CreateCustomer" method="post" enctype="multipart/form-data" id="createCustomerForm">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="FullName" class="form-label">Full Name *</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person"></i></span>
                                        <input asp-for="FullName" class="form-control focus-glow" placeholder="Enter full name" required />
                                    </div>
                                    <span asp-validation-for="FullName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Email" class="form-label">Email Address *</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                        <input asp-for="Email" type="email" class="form-control focus-glow" placeholder="Enter email address" required />
                                    </div>
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="NIC" class="form-label">NIC Number</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-card-text"></i></span>
                                        <input asp-for="NIC" class="form-control focus-glow" placeholder="Enter NIC number" />
                                    </div>
                                    <span asp-validation-for="NIC" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ProfileImage" class="form-label">Profile Image</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-image"></i></span>
                                        <input asp-for="ProfileImage" type="file" class="form-control focus-glow" accept="image/*" />
                                    </div>
                                    <small class="form-text text-muted">Upload a profile picture (JPG, PNG, GIF). Max size: 5MB.</small>
                                    <span asp-validation-for="ProfileImage" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    <label asp-for="Address" class="form-label">Address</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                        <textarea asp-for="Address" class="form-control focus-glow" rows="3" placeholder="Enter address"></textarea>
                                    </div>
                                    <span asp-validation-for="Address" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Password Management Section -->
                        <div class="row g-3 mt-3">
                            <div class="col-12">
                                <div class="card bg-light">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="bi bi-key"></i> Password Management
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <div class="col-md-6">
                                                <div class="form-check">
                                                    <input asp-for="GenerateRandomPassword" class="form-check-input" type="checkbox" id="generateRandomPassword" />
                                                    <label class="form-check-label" for="generateRandomPassword">
                                                        Generate Random Password
                                                    </label>
                                                </div>
                                                <small class="form-text text-muted">A secure random password will be generated automatically.</small>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-check">
                                                    <input asp-for="SendCredentialsEmail" class="form-check-input" type="checkbox" id="sendCredentialsEmail" />
                                                    <label class="form-check-label" for="sendCredentialsEmail">
                                                        Send Login Credentials via Email
                                                    </label>
                                                </div>
                                                <small class="form-text text-muted">Login credentials will be sent to the customer's email address.</small>
                                            </div>
                                            <div class="col-12" id="customPasswordSection" style="display: none;">
                                                <div class="form-group">
                                                    <label asp-for="CustomPassword" class="form-label">Custom Password</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                                        <input asp-for="CustomPassword" type="password" class="form-control focus-glow" placeholder="Enter custom password" />
                                                        <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility()">
                                                            <i class="bi bi-eye" id="passwordToggleIcon"></i>
                                                        </button>
                                                    </div>
                                                    <small class="form-text text-muted">Password must be at least 6 characters long.</small>
                                                    <span asp-validation-for="CustomPassword" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-actions mt-4">
                            <button type="submit" class="btn-3d-interactive btn-primary-3d hover-lift">
                                <i class="bi bi-check-lg"></i>
                                <span>Create Customer</span>
                            </button>
                            <a href="@Url.Action("Customers")" class="btn-3d-interactive btn-secondary-3d ms-2 hover-lift">
                                <i class="bi bi-x-lg"></i>
                                <span>Cancel</span>
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Enhanced form validation and interactivity
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('createCustomerForm');
            const submitBtn = form.querySelector('button[type="submit"]');
            const inputs = form.querySelectorAll('input, textarea');
            const generateRandomPasswordCheckbox = document.getElementById('generateRandomPassword');
            const customPasswordSection = document.getElementById('customPasswordSection');
            
            // Handle password generation checkbox
            generateRandomPasswordCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    customPasswordSection.style.display = 'none';
                    document.getElementById('CustomPassword').value = '';
                } else {
                    customPasswordSection.style.display = 'block';
                }
            });
            
            // Add real-time validation
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });
                
                input.addEventListener('input', function() {
                    clearFieldError(this);
                });
            });
            
            // Handle file upload validation
            const profileImageInput = document.getElementById('ProfileImage');
            profileImageInput.addEventListener('change', function() {
                validateImageFile(this);
            });
            
            // Enhanced form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validate all fields
                let isValid = true;
                inputs.forEach(input => {
                    if (!validateField(input)) {
                        isValid = false;
                    }
                });
                
                if (isValid) {
                    // Show loading state
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> Creating...';
                    
                    // Show notification
                    showNotification('Creating customer...', 'info', 3000);
                    
                    // Submit form after delay for better UX
                    setTimeout(() => {
                        form.submit();
                    }, 1000);
                } else {
                    showNotification('Please fix the validation errors before submitting', 'error', 5000);
                }
            });
        });
        
        // Validate individual field
        function validateField(field) {
            const value = field.value.trim();
            const type = field.type;
            const required = field.hasAttribute('required');
            
            // Clear previous validation
            clearFieldError(field);
            
            if (required && !value) {
                showFieldError(field, 'This field is required');
                return false;
            }
            
            if (value) {
                let isValid = true;
                let errorMessage = '';
                
                switch (type) {
                    case 'email':
                        if (value.indexOf('@@') === -1 || value.indexOf('.') === -1) {
                            isValid = false;
                            errorMessage = 'Please enter a valid email address';
                        }
                        break;
                    case 'url':
                        if (!value.startsWith('http://') && !value.startsWith('https://')) {
                            isValid = false;
                            errorMessage = 'Please enter a valid URL';
                        }
                        break;
                }
                
                // Special validation for NIC
                if (field.name === 'NIC' && value) {
                    if (!/^[0-9]{9}[vVxX]?$|^[0-9]{12}$/.test(value)) {
                        isValid = false;
                        errorMessage = 'Please enter a valid NIC number';
                    }
                }
                
                // Special validation for custom password
                if (field.name === 'CustomPassword' && value) {
                    if (value.length < 6) {
                        isValid = false;
                        errorMessage = 'Password must be at least 6 characters long';
                    }
                }
                
                if (!isValid) {
                    showFieldError(field, errorMessage);
                }
                
                return isValid;
            }
            
            return true;
        }
        
        // Show field error
        function showFieldError(field, message) {
            field.classList.add('is-invalid');
            
            // Remove existing error message
            const existingError = field.parentElement.querySelector('.invalid-feedback');
            if (existingError) {
                existingError.remove();
            }
            
            // Add new error message
            const errorDiv = document.createElement('div');
            errorDiv.className = 'invalid-feedback';
            errorDiv.textContent = message;
            field.parentElement.appendChild(errorDiv);
        }
        
        // Clear field error
        function clearFieldError(field) {
            field.classList.remove('is-invalid');
            const errorDiv = field.parentElement.querySelector('.invalid-feedback');
            if (errorDiv) {
                errorDiv.remove();
            }
        }
        
        // Validate image file
        function validateImageFile(input) {
            const file = input.files[0];
            if (file) {
                // Check file size (5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showFieldError(input, 'File size must be less than 5MB');
                    input.value = '';
                    return false;
                }
                
                // Check file type
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                if (!allowedTypes.includes(file.type)) {
                    showFieldError(input, 'Please select a valid image file (JPG, PNG, GIF)');
                    input.value = '';
                    return false;
                }
                
                clearFieldError(input);
                return true;
            }
            return true;
        }
        
        // Toggle password visibility
        function togglePasswordVisibility() {
            const passwordInput = document.getElementById('CustomPassword');
            const toggleIcon = document.getElementById('passwordToggleIcon');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.className = 'bi bi-eye-slash';
            } else {
                passwordInput.type = 'password';
                toggleIcon.className = 'bi bi-eye';
            }
        }
    </script>
}
