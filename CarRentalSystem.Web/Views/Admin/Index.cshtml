@model CarRentalSystem.Web.ViewModels.Admin.AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-dashboard-3d">
    <!-- Compact Header -->
    <div class="dashboard-header-3d mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="dashboard-title-3d mb-1">
                    <div class="title-icon-3d">
                        <i class="bi bi-speedometer2"></i>
                        <div class="icon-glow-3d"></div>
                    </div>
                    Admin Dashboard
                </h2>
            </div>
            <div class="dashboard-actions-3d">
                <button class="btn-3d-interactive btn-primary-3d btn-sm" onclick="refreshDashboard()">
                    <i class="bi bi-arrow-clockwise"></i>
                    <span>Refresh</span>
                </button>
           <form method="post" asp-action="UpdateBookingLocations" style="display: inline;">
               <button type="submit" class="btn-3d-interactive btn-success-3d btn-sm ms-1" onclick="return confirm('This will update all existing bookings with sample location data. Continue?')">
                   <i class="bi bi-geo-alt"></i>
                   <span>Update Locations</span>
               </button>
           </form>
           <button type="button" class="btn-3d-interactive btn-warning-3d btn-sm ms-1" onclick="processBookingTimeouts()">
               <i class="bi bi-clock-history"></i>
               <span>Process Timeouts</span>
           </button>
            </div>
        </div>
    </div>

    <!-- Enhanced 3D Stats Cards -->
    <div class="row g-3 mb-3">
        <div class="col-xl-6 col-md-6">
            <div class="stats-card-3d bookings-3d" style="padding: 1rem;">
                <div class="stats-icon-3d">
                    <i class="bi bi-calendar-check"></i>
                    <div class="icon-glow-3d"></div>
                </div>
                <div class="stats-content-3d">
                    <h3>@Model.RecentBookings.Count</h3>
                    <p>Total Bookings</p>
                    <small>All time</small>
                </div>
                <div class="card-glow-3d"></div>
            </div>
        </div>
        <div class="col-xl-6 col-md-6">
            <div class="stats-card-3d customers-3d" style="padding: 1rem;">
                <div class="stats-icon-3d">
                    <i class="bi bi-people"></i>
                    <div class="icon-glow-3d"></div>
                </div>
                <div class="stats-content-3d">
                    <h3>@Model.TotalCustomers</h3>
                    <p>Total Customers</p>
                    <small>Registered users</small>
                </div>
                <div class="card-glow-3d"></div>
            </div>
        </div>
    </div>


    <!-- Charts Row -->
    <div class="row g-3 mb-3">
                <!-- Enhanced 3D Revenue Chart -->
                <div class="col-lg-4">
                    <div class="card-3d-interactive chart-card-3d">
                        <div class="card-header-3d" style="padding: 0.75rem 1rem;">
                            <h6 class="card-title-3d mb-0">
                                <div class="title-icon-3d">
                                    <i class="bi bi-pie-chart"></i>
                                    <div class="icon-glow-3d"></div>
                                </div>
                                Revenue Distribution
                            </h6>
                        </div>
                        <div class="card-body-3d">
                            <div style="height: 200px;">
                                <canvas id="revenueChart"></canvas>
                            </div>
                        </div>
                        <div class="card-glow-3d"></div>
                    </div>
                </div>
                
                <!-- Enhanced 3D Bookings Trend -->
                <div class="col-lg-4">
                    <div class="card-3d-interactive chart-card-3d">
                        <div class="card-header-3d" style="padding: 0.75rem 1rem;">
                            <h6 class="card-title-3d mb-0">
                                <div class="title-icon-3d">
                                    <i class="bi bi-graph-up"></i>
                                    <div class="icon-glow-3d"></div>
                                </div>
                                Bookings Trend
                            </h6>
                        </div>
                        <div class="card-body-3d">
                            <div style="height: 200px;">
                                <canvas id="bookingsTrendChart"></canvas>
                            </div>
                        </div>
                        <div class="card-glow-3d"></div>
                    </div>
                </div>
                
                <!-- Enhanced 3D Car Status -->
                <div class="col-lg-4">
                    <div class="card-3d-interactive chart-card-3d">
                        <div class="card-header-3d" style="padding: 0.75rem 1rem;">
                            <h6 class="card-title-3d mb-0">
                                <div class="title-icon-3d">
                                    <i class="bi bi-bar-chart"></i>
                                    <div class="icon-glow-3d"></div>
                                </div>
                                Car Status Overview
                            </h6>
                        </div>
                        <div class="card-body-3d">
                            <div style="height: 200px;">
                                <canvas id="carStatusChart"></canvas>
                            </div>
                        </div>
                        <div class="card-glow-3d"></div>
                    </div>
                </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize dashboard with real data
        document.addEventListener('DOMContentLoaded', function() {
            initRealDataCharts();
        });
        
        function initRealDataCharts() {
            // Revenue Chart with real data
            const revenueCtx = document.getElementById('revenueChart');
            if (revenueCtx) {
                new Chart(revenueCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Paid Revenue', 'Pending Revenue'],
                        datasets: [{
                            data: [@ViewBag.TotalRevenue, @ViewBag.PendingRevenue],
                            backgroundColor: [
                                'rgba(46, 204, 113, 0.8)',
                                'rgba(241, 196, 15, 0.8)'
                            ],
                            borderWidth: 3,
                            hoverOffset: 15
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    usePointStyle: true
                                }
                            }
                        }
                    }
                });
            }
            
            // Car Status Chart with real data
            const carStatusCtx = document.getElementById('carStatusChart');
            if (carStatusCtx) {
                new Chart(carStatusCtx, {
                    type: 'bar',
                    data: {
                        labels: ['Approved', 'Pending', 'Rejected'],
                        datasets: [{
                            label: 'Cars',
                            data: [@Model.ApprovedCars, @Model.PendingCars.Count, @Model.RejectedCars],
                            backgroundColor: [
                                'rgba(46, 204, 113, 0.8)',
                                'rgba(241, 196, 15, 0.8)',
                                'rgba(231, 76, 60, 0.8)'
                            ],
                            borderRadius: 8
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false }
                        },
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });
            }
            
            // Bookings Trend Chart
            const bookingsTrendCtx = document.getElementById('bookingsTrendChart');
            if (bookingsTrendCtx) {
                new Chart(bookingsTrendCtx, {
                    type: 'line',
                    data: {
                        labels: ['Total Bookings', 'Confirmed Bookings', 'Active Customers'],
                        datasets: [{
                            label: 'Count',
                            data: [@ViewBag.TotalBookings, @ViewBag.ConfirmedBookings, @ViewBag.ActiveCustomers],
                            fill: true,
                            backgroundColor: 'rgba(52, 152, 219, 0.1)',
                            borderColor: 'rgba(52, 152, 219, 1)',
                            borderWidth: 3,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false }
                        },
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });
            }
        }
        
        function refreshDashboard() {
            location.reload();
        }

        function processBookingTimeouts() {
            if (confirm('This will cancel all unpaid bookings that are older than 15 minutes. Continue?')) {
                fetch('/Admin/ProcessBookingTimeouts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Booking timeouts processed successfully!');
                        refreshDashboard();
                    } else {
                        alert('Error: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while processing booking timeouts.');
                });
            }
        }

        // Auto-refresh every 30 seconds
        setInterval(function() {
            // You can implement AJAX refresh here if needed
        }, 30000);
    </script>
}
